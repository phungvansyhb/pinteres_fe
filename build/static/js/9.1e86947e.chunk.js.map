{"version":3,"sources":["components/CategoryItem.js","components/Home.js","components/K16.js"],"names":["CategoryItemStyled","styled","IconButtonStyled","CategoryItem","category","activeKey","toggleCategory","isActive","useMemo","bgColor","color","PALLET","WHITE","BLACK","onClick","className","Home","React","forwardRef","ref","useState","activeCategory","setActiveCategory","useInfiniteQuery","a","pageParam","result","Image","getAllExcludeK16","searchByCategory","data","images","getNextPageParam","lastPage","allPages","length","hasNextPage","fetchNextPage","hasPreviousPage","isFetchingNextPage","toggleMenuCategory","isFetching","useCallback","useImperativeHandle","onSearchSubmit","useEffect","fetching","handleScroll","e","target","scrollingElement","scrollHeight","scrollTop","clientHeight","document","addEventListener","removeEventListener","CategoryWrapper","map","item","index","pages","group","i","sort","b","Math","random","pin","srcImage","urls","key","div","FlexExtend","FlexStyled","K16Category","label","value","TYPE_FILTER","K16Wrapper","BoxStyled","Box","K16","process","window","localStorage","getItem","validateKey","setValidateKey","nameMember","setNameMember","getK16Only","searchByName","toggleState","type","keyRef","useRef","errorRef","console","log","gap","justifyContent","open","in","style","alignItems","htmlFor","name","fontWeight","textAlign","current","setItem","innerText"],"mappings":"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","file":"static/js/9.1e86947e.chunk.js","sourcesContent":["import React, {useMemo} from 'react';\nimport {IconButtonStyled} from \"../styledCss/ButtonStyled\";\nimport styled from \"styled-components\";\nimport {PALLET} from \"../styledCss/Theme\";\n\n\n\nfunction CategoryItem({category, activeKey, toggleCategory, ...props}) {\n    const isActive = useMemo(() => {\n        if (activeKey === category) return true;\n        return false\n    }, [activeKey, category])\n    return (\n        <CategoryItemStyled bgColor={isActive ? '#FECA6E' : '#fff'}\n                            color={isActive ? PALLET.WHITE : PALLET.BLACK}\n                            onClick={() => toggleCategory(category)} className='capitalize'>{category}</CategoryItemStyled>\n    );\n}\n\nexport const CategoryItemStyled = styled(IconButtonStyled)`\n  @media (max-width: 768px){\n    border-radius: 8px;\n    padding: 8px;\n  }\n  :hover {\n    background-color: #d9d9d9;\n  }\n`\n\nexport default CategoryItem;","import React, {useCallback, useEffect, useImperativeHandle, useRef, useState} from 'react';\nimport {FlexStyled} from \"../styledCss/FlexStyled\";\nimport CategoryItem from \"./CategoryItem\";\nimport Mainboard from \"./Mainboard\";\nimport styled from \"styled-components\";\nimport Image from '../api/Image'\nimport {useQuery, useInfiniteQuery} from \"react-query\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {IconButtonStyled} from \"../styledCss/ButtonStyled\";\nimport {PALLET} from \"../styledCss/Theme\";\nimport Pin from \"./Pin\";\n\nconst category = [\"boy\", \"girl\", \"sexy\", \"wendy\", \"cute\", \"anime\", \"gamming\", \"meme\", \"food\", \"natura\", \"west-lake\", \"ho-tan-xa\", \"afternoon-sky\", \"flower\" ,\"dog\",\"motivation\"]\n\nconst Home = React.forwardRef(({...props}, ref) => {\n    const [activeCategory, setActiveCategory] = useState()\n    const {\n        data,\n        hasNextPage,\n        hasPreviousPage,\n        isFetchingNextPage,\n        fetchNextPage,\n        isFetching\n    } = useInfiniteQuery(['getAllExcludeK16', activeCategory], async ({pageParam}) => {\n        let result = {}\n        if (!activeCategory) {\n            result = await Image.getAllExcludeK16(pageParam)\n        } else {\n            result = await Image.searchByCategory(activeCategory, pageParam)\n        }\n        return [...result.data?.images]\n    }, {\n        getNextPageParam: (lastPage, allPages) => {\n            const nextPage = allPages.length + 1\n            return nextPage\n        }\n\n    })\n\n    const toggleMenuCategory = useCallback((category) => {\n        if (activeCategory !== category) {\n            setActiveCategory(category)\n        }\n    }, [category, activeCategory])\n    useImperativeHandle(ref, () => {\n        return {\n            onSearchSubmit: (category) => setActiveCategory(category)\n        }\n    }, [{}])\n    useEffect(() => {\n        let fetching = false;\n        const handleScroll = async (e) => {\n            const {scrollHeight, scrollTop, clientHeight} = e.target.scrollingElement;\n            if (!fetching && scrollHeight - scrollTop - clientHeight <= 100) {\n                fetching = true\n                if (hasNextPage) await fetchNextPage()\n                fetching = false\n            }\n        }\n        document.addEventListener('scroll', handleScroll)\n        return () => {\n            document.removeEventListener('scroll', handleScroll)\n        }\n    }, [fetchNextPage, hasNextPage])\n    return (\n        <>\n\n            <CategoryWrapper>\n                {category.map((item, index) => <CategoryItem category={item} activeKey={activeCategory}\n                                                             toggleCategory={toggleMenuCategory} key={index}/>)}\n            </CategoryWrapper>\n            <div className='mainboard'>\n                <div className=\"mainboard__container\">\n                    {\n                        data?.pages.map((group, i) => group.sort(function (a, b) {\n                            return 0.5 - Math.random();\n                        }).map((pin, index) => {\n                            let {srcImage} = pin;\n                            return <Pin urls={srcImage} {...pin} key={index}/>;\n                        }))\n                    }\n                </div>\n            </div>\n\n\n        </>\n    );\n})\nconst CategoryWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  overflow-x: auto;\n  white-space: nowrap;\n\n`\nexport const FlexExtend = styled(FlexStyled)`\n  overflow: auto;\n  gap: 6px;\n`\n\nexport default Home;","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {useInfiniteQuery, useQuery} from \"react-query\";\nimport Image from \"../api/Image\";\nimport Mainboard from \"./Mainboard\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport styled from \"styled-components\";\nimport CategoryItem, {CategoryItemStyled} from \"./CategoryItem\";\nimport {FlexExtend} from \"./Home\";\nimport {PALLET} from \"../styledCss/Theme\";\nimport Pin, {ModalStyled} from \"./Pin\";\nimport Modal from \"@material-ui/core/Modal\";\nimport {FormWrapper} from \"./AddComment\";\nimport {FlexStyled} from \"../styledCss/FlexStyled\";\nimport {IconButtonStyled} from \"../styledCss/ButtonStyled\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Box from \"@material-ui/core/Box\";\n\n\nconst K16Category = [\n    {label: 'pretty', value: 'pretty'},\n    {label: 'oversensitive', value: 'oversensitive'},\n    {label: 'ripe', value: 'ripe'},\n    {label: 'wedding', value: 'wedding'}\n]\nconst K16Member = [\n    {label: \"  Bùi An\", value: \"bui - an\"},\n    {label: \"  Duy Anh     \", value: \"  duy - anh\"},\n    {label: \"  Lan Anh     \", value: \"  lan - anh\"},\n    {label: \"  Ngọc Ánh    \", value: \"   ngoc - anh\"},\n    {label: \"  Đặng Dung   \", value: \"   dang - dung\"},\n    {label: \"  Tuấn Dũng   \", value: \"  tuan - dung\"},\n    {label: \"  Đức Duy     \", value: \"  duc - duy\"},\n    {label: \"  Hải Đăng    \", value: \" hai - dang\"},\n    {label: \"  Mạnh Đức    \", value: \"  manh - duc\"},\n    {label: \"  Đức Hải     \", value: \" duc - hai\"},\n    {label: \"  Vương Hải   \", value: \"  vuong - hai\"},\n    {label: \"  Kiều Hoa    \", value: \"  kieu - hoa\"},\n    {label: \"  Nguyễn Hòa  \", value: \"  nguyen - hoa\"},\n    {label: \"  Thu Hoài    \", value: \"  thu - hoai\"},\n    {label: \"  Phùng Hoàng \", value: \"  phung - hoang\"},\n    {label: \"  Nguyễn Lan  \", value: \"   nguyen - lan\"},\n    {label: \"  Lê Linh     \", value: \"  le - linh\"},\n    {label: \"  Phí Minh    \", value: \"  phi - minh\"},\n    {label: \"  Đỗ Nguyệt   \", value: \"  do - nguyet\"},\n    {label: \"  Nguyễn Nhàn \", value: \"  nguyen - nhan\"},\n    {label: \"  Yến Nhi     \", value: \"  yen - nhi\"},\n    {label: \"  Mai Phương  \", value: \"  mai - phuong\"},\n    {label: \"  Đỗ Thảo     \", value: \"  do - thao\"},\n    {label: \"  Kiều Thảo   \", value: \"   kieu - thao\"},\n    {label: \"  Nguyễn Thảo \", value: \"    nguyen - thao\"},\n    {label: \"  Thanh Thảo  \", value: \"   thanh - thao\"},\n    {label: \"  Phí Thảo    \", value: \"    phi - thao\"},\n    {label: \"  Phùng Thảo  \", value: \"    phung - thao\"},\n    {label: \" Nguyễn Thuyết\", value: \"   nguyen - thuyet\"},\n    {label: \"  Kiều Trang  \", value: \"      kieu - trang\"},\n    {label: \"  Kiều Trinh  \", value: \"      kieu - trinh\"},\n    {label: \"  Mạnh Tuấn   \", value: \"        manh - tuan\"},\n    {label: \"  Anh Tuyến   \", value: \"      anh - tuyen\"},\n    {label: \"  Hoàng Vân   \", value: \"      hoang - van\"},\n    {label: \"  Hoàng Viên  \", value: \"    hoang - vien\"},\n    {label: \"  Đức Việt    \", value: \"      duc - viet\"},\n    {label: \"  Kiều Vũ     \", value: \"      kieu - vu\"}\n]\nconst TYPE_FILTER = {\n    CATEGORY: 'CATEGORY',\n    MEMBER: 'MEMBER',\n}\n\n\nfunction K16({...props}) {\n    const key = process.env.REACT_APP_KEY_K16\n\n    const [validateKey, setValidateKey] = useState(()=>{\n        return window.localStorage.getItem('k16Key') === key\n    });\n    const [nameMember, setNameMember] = useState();\n    const [activeCategory, setActiveCategory] = useState();\n\n\n    const {\n        data,\n        hasNextPage,\n        hasPreviousPage,\n        isFetchingNextPage,\n        fetchNextPage,\n        isFetching\n    } = useInfiniteQuery(['getK16Only', activeCategory, nameMember], async({pageParam}) => {\n        let result = {}\n        if (!activeCategory && !nameMember) {\n            result = await Image.getK16Only(pageParam)\n        }\n        else if (activeCategory) {\n            result = await Image.searchByCategory(activeCategory , pageParam)\n        } else {\n            result = await Image.searchByName(nameMember , pageParam)\n        }\n        return [...result.data?.images]\n    }, {getNextPageParam: (lastPage, allPages) => {\n            const nextPage = allPages.length + 1\n            return nextPage\n        }})\n\n\n\n    const toggleState = useCallback((value, type) => {\n        if (type === TYPE_FILTER.CATEGORY) {\n            if (activeCategory !== value) {\n                setActiveCategory(value)\n                setNameMember(null)\n            }\n        }\n        if (type === TYPE_FILTER.MEMBER) {\n            if (nameMember !== value) {\n                setActiveCategory(null)\n                setNameMember(value)\n            }\n        }\n\n    }, [])\n    const keyRef = useRef();\n    const errorRef = useRef();\n\n    function checkKey() {\n        console.log(keyRef.current.value , key)\n        if (keyRef.current.value === key) {\n            window.localStorage.setItem('k16Key',key)\n            setValidateKey(true)\n        }\n        else{\n            errorRef.current.innerText='Key không chính xác'\n        }\n    }\n    useEffect(() => {\n        let fetching = false;\n        const handleScroll = async (e) => {\n            const {scrollHeight, scrollTop, clientHeight} = e.target.scrollingElement;\n            console.log(scrollHeight - scrollTop - clientHeight)\n            if (!fetching && scrollHeight - scrollTop - clientHeight <= 100) {\n                fetching = true\n                if (hasNextPage) await fetchNextPage()\n                fetching = false\n            }\n        }\n        document.addEventListener('scroll', handleScroll)\n        return () => {\n            document.removeEventListener('scroll', handleScroll)\n        }\n    }, [fetchNextPage, hasNextPage])\n    if (!validateKey) return (\n        <ModalStyled open={true} >\n            <Fade in={true}>\n                <BoxStyled>\n                    <FormWrapper style={{gap:'16px'}}>\n                        <FlexStyled alignItems='center' >\n                            <label htmlFor='keyK16'>Key</label>\n                            <input type=\"text\" name=\"keyK16\" ref={keyRef}/>\n                        </FlexStyled>\n                        <p ref={errorRef} style={{color:\"red\" , fontWeight:600 , textAlign:'center'}}></p>\n                        <FlexStyled justifyContent='center'>\n                            <IconButtonStyled bgColor={PALLET.BLACK} color={PALLET.WHITE} type='submit'\n                                              onClick={() => checkKey()}>Check</IconButtonStyled>\n                        </FlexStyled>\n                    </FormWrapper>\n                </BoxStyled>\n            </Fade>\n        </ModalStyled>\n    )\n    return (\n        <K16Wrapper>\n            <FlexExtend gap={'24px'} justifyContent={'center'}>\n                {K16Category.map((item, index) => <CategoryItem category={item.label} activeKey={activeCategory}\n                                                                toggleCategory={(value) => toggleState(value, TYPE_FILTER.CATEGORY)}\n                                                                key={index}/>)}\n              {/*  <CategoryItemStyled bgColor={nameMember ? PALLET.BLUE : '#fff'}\n                                    color={nameMember ? PALLET.WHITE : PALLET.BLACK}\n                                    className='memberBtn'\n                >\n\n                    <div>{nameMember || 'By Name'}</div>\n                    <div className='memberList'>\n                        {K16Member.map((item, index) => <CategoryItem category={item.label} activeKey={activeCategory}\n                                                                      toggleCategory={(value) => toggleState(value, TYPE_FILTER.MEMBER)}\n                                                                      key={index}/>)}\n                    </div>\n                </CategoryItemStyled>*/}\n\n            </FlexExtend>\n            {isFetching ? <CircularProgress color=\"primary\" className='selfCenter'/> :\n                <div className='mainboard'>\n                    <div className=\"mainboard__container\">\n                        {\n                            data?.pages.map((group, i) => group.sort(function (a, b) {\n                                return 0.5 - Math.random();\n                            }).map((pin, index) => {\n                                let {srcImage} = pin;\n                                return <Pin urls={srcImage} {...pin} key={index}/>;\n                            }))\n                        }\n                    </div>\n                </div>\n            }\n        </K16Wrapper>\n\n    );\n}\n\nconst K16Wrapper = styled.div`\n  .memberBtn {\n    position: relative;\n  }\n\n  .memberList {\n    display: none;\n    position: relative;\n    z-index: 10;\n    top: 20px;\n    left: 50%;\n    transform: translate(-50%, 0);\n    column-count: 5;\n    gap: 12px;\n  }\n\n  .memberBtn:hover, :active {\n    .memberList {\n      display: block;\n    }\n  }\n  \n`\nexport const BoxStyled = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #fff;\n  border-radius: 12px;\n  min-width: 300px;\n  height: max-content;\n  outline: 0;\n  overflow: hidden;\n`;\n\n\nexport default K16;"],"sourceRoot":""}